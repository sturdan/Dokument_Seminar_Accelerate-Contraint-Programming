@article{amadi15jo,
  title = {Portfolio Approaches in Constraint Programming},
  author = {Amadini, Roberto},
  date = {2015-10},
  journaltitle = {Constraints},
  shortjournal = {Constraints},
  volume = {20},
  number = {4},
  pages = {483--483},
  issn = {1383-7133, 1572-9354},
  doi = {10.1007/s10601-015-9215-9},
  url = {http://link.springer.com/10.1007/s10601-015-9215-9},
  urldate = {2023-11-09},
  langid = {english},
  keywords = {Constraint Programming,Typen Constraint Problems},
  annotation = {Typen Constraint Problems},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Zeitschriftenartikel\Amadini - 2015 - Portfolio approaches in constraint programming [amadi2015].pdf}
}

@article{aptjo,
  title = {Principles of {{Constraint Programming}}},
  author = {Apt, Krzysztof R},
  langid = {english},
  keywords = {Constraint Programming},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Zeitschriftenartikel\Apt - Principles of Constraint Programming [aptjo].pdf}
}

@article{ardisjo,
  title = {A {{Framework}} for the {{Development}} of {{Personalized}}, {{Distributed Web-Based Configuration Systems}}},
  author = {Ardissono, Liliana and Felfernig, Alexander and Friedrich, Gerhard and Goy, Anna and Jannach, Dietmar and Petrone, Giovanna and Schäfer, Ralph and Zanker, Markus},
  langid = {english},
  keywords = {Constraint Programming},
  file = {C:\Users\Daniel\Zotero\storage\2QT3EU67\Ardissono et al. - A Framework for the Development of Personalized, D.pdf}
}

@video{assoc23vi,
  entrysubtype = {video},
  title = {{{ACP Summer School}} 2023: "{{Getting}} the {{Best}} out of Your {{Constraint Solver}}" by {{Lars Kotthoff}}},
  shorttitle = {{{ACP Summer School}} 2023},
  editor = {{Association for Constraint Programming}},
  editortype = {director},
  date = {2023-08-01},
  url = {https://www.youtube.com/watch?v=_v114HwW6rc},
  urldate = {2023-11-11},
  abstract = {Full title: "Getting the Best out of your Constraint Solver: Portfolios and Automated Tuning"},
  keywords = {Constraint Programming}
}

@video{assoc23via,
  entrysubtype = {video},
  title = {{{ACP Summer School}} 2023: "{{Intro}} to {{Constraint Programming}}" by {{Tias Guns}}},
  shorttitle = {{{ACP Summer School}} 2023},
  editor = {{Association for Constraint Programming}},
  editortype = {director},
  date = {2023-08-01},
  url = {https://www.youtube.com/watch?v=JpxbiEAFe80},
  urldate = {2023-11-11},
  keywords = {Constraint Programming}
}

@article{bergsjo,
  title = {Random {{Search}} for {{Hyper-Parameter Optimization}}},
  author = {Bergstra, James and Bengio, Yoshua},
  abstract = {Grid search and manual search are the most widely used strategies for hyper-parameter optimization. This paper shows empirically and theoretically that randomly chosen trials are more efficient for hyper-parameter optimization than trials on a grid. Empirical evidence comes from a comparison with a large previous study that used grid search and manual search to configure neural networks and deep belief networks. Compared with neural networks configured by a pure grid search, we find that random search over the same domain is able to find models that are as good or better within a small fraction of the computation time. Granting random search the same computational budget, random search finds better models by effectively searching a larger, less promising configuration space. Compared with deep belief networks configured by a thoughtful combination of manual search and grid search, purely random search over the same 32-dimensional configuration space found statistically equal performance on four of seven data sets, and superior performance on one of seven. A Gaussian process analysis of the function from hyper-parameters to validation set performance reveals that for most data sets only a few of the hyper-parameters really matter, but that different hyper-parameters are important on different data sets. This phenomenon makes grid search a poor choice for configuring algorithms for new data sets. Our analysis casts some light on why recent “High Throughput” methods achieve surprising success—they appear to search through a large number of hyper-parameters because most hyper-parameters do not matter much. We anticipate that growing interest in large hierarchical models will place an increasing burden on techniques for hyper-parameter optimization; this work shows that random search is a natural baseline against which to judge progress in the development of adaptive (sequential) hyper-parameter optimization algorithms.},
  langid = {english},
  keywords = {new},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Zeitschriftenartikel\Bergstra, Bengio - Random Search for Hyper-Parameter Optimization [bergsjo].pdf}
}

@online{bisch18pr,
  title = {{{mlrMBO}}: {{A Modular Framework}} for {{Model-Based Optimization}} of {{Expensive Black-Box Functions}}},
  shorttitle = {{{mlrMBO}}},
  author = {Bischl, Bernd and Richter, Jakob and Bossek, Jakob and Horn, Daniel and Thomas, Janek and Lang, Michel},
  date = {2018-12-03},
  eprint = {1703.03373},
  eprinttype = {arXiv},
  eprintclass = {stat},
  url = {http://arxiv.org/abs/1703.03373},
  urldate = {2024-06-11},
  abstract = {We present mlrMBO, a flexible and comprehensive R toolbox for model-based optimization (MBO), also known as Bayesian optimization, which addresses the problem of expensive black-box optimization by approximating the given objective function through a surrogate regression model. It is designed for both single- and multi-objective optimization with mixed continuous, categorical and conditional parameters. Additional features include multi-point batch proposal, parallelization, visualization, logging and error-handling. mlrMBO is implemented in a modular fashion, such that single components can be easily replaced or adapted by the user for specific use cases, e.g., any regression learner from the mlr toolbox for machine learning can be used, and infill criteria and infill optimizers are easily exchangeable. We empirically demonstrate that mlrMBO provides state-of-the-art performance by comparing it on different benchmark scenarios against a wide range of other optimizers, including DiceOptim, rBayesianOptimization, SPOT, SMAC, Spearmint, and Hyperopt.},
  pubstate = {prepublished},
  keywords = {Constraint Programming,new,Statistics - Machine Learning},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Preprint\Bischl et al - 2018 - mlrMBO - A Modular Framework for Model-Based Optimization of Expensive Black-Box [bisch18pra] arXiv1703.03373 [stat].pdf}
}

@book{boyd04bo,
  title = {Convex Optimization},
  author = {Boyd, Stephen P. and Vandenberghe, Lieven},
  date = {2004},
  publisher = {Cambridge University Press},
  location = {Cambridge, UK ; New York},
  isbn = {978-0-521-83378-3},
  pagetotal = {716},
  keywords = {Convex functions,Mathematical optimization},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Buch\Boyd, Vandenberghe - 2004 - Convex optimization [boyd04bo]2.pdf}
}

@article{bunz17jo,
  title = {Graph {{Neural Networks}} and {{Boolean Satisfiability}}},
  author = {Bünz, Benedikt and Lamm, Matthew},
  date = {2017},
  url = {https://arxiv.org/abs/1702.03592},
  urldate = {2024-07-27},
  abstract = {In this paper we explore whether or not deep neural architectures can learn to classify Boolean satisfiability (SAT). We devote considerable time to discussing the theoretical properties of SAT. Then, we define a graph representation for Boolean formulas in conjunctive normal form, and train neural classifiers over general graph structures called Graph Neural Networks, or GNNs, to recognize features of satisfiability. To the best of our knowledge this has never been tried before. Our preliminary findings are potentially profound. In a weakly-supervised setting, that is, without problem specific feature engineering, Graph Neural Networks can learn features of satisfiability.},
  keywords = {Variable-Constraint Graph},
  annotation = {Variable-Constraint Graph},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Preprint\Bünz, Lamm - 2017 - Graph Neural Networks and Boolean Satisfiability [bunz17pr] Variable-Constraint Graph.pdf}
}

@misc{ChatGin,
  title = {{{ChatGptExport}}},
  abstract = {search for constraint solvers},
  keywords = {Constraint Programming},
  file = {C:\Users\Daniel\Zotero\storage\ING5HE96\chat.html}
}

@online{ChatGwea,
  title = {ChatGPT -Gradientenverfahren mit Constraints},
  url = {https://chatgpt.com/c/e55c1ecd-f376-4b56-b934-8ba76a30cc5e},
  urldate = {2024-07-26},
  abstract = {A conversational AI system that listens, learns, and challenges},
  langid = {ngerman},
  keywords = {Gradientenverfahren mit nebenbedingung,new},
  file = {C:\Users\Daniel\Zotero\storage\3ALJ576U\e55c1ecd-f376-4b56-b934-8ba76a30cc5e.html}
}

@software{Chuff24co,
  title = {Chuffed/Chuffed},
  date = {2024-05-21T05:13:26Z},
  origdate = {2016-09-27T01:06:50Z},
  url = {https://github.com/chuffed/chuffed},
  urldate = {2024-06-13},
  abstract = {The Chuffed CP solver},
  organization = {Chuffed},
  keywords = {Constraint Programming}
}

@online{CP20we,
  title = {{{CP}} 2024},
  url = {https://cp2024.a4cp.org/},
  urldate = {2024-06-14},
  keywords = {Constraint Programming},
  file = {C:\Users\Daniel\Zotero\storage\6I4B34CS\cp2024.a4cp.org.html}
}

@article{dakin65jo,
  title = {A Tree-Search Algorithm for Mixed Integer Programming Problems},
  author = {Dakin, R. J.},
  date = {1965-03-01},
  journaltitle = {The Computer Journal},
  shortjournal = {The Computer Journal},
  volume = {8},
  number = {3},
  pages = {250--255},
  issn = {0010-4620, 1460-2067},
  doi = {10.1093/comjnl/8.3.250},
  url = {https://academic.oup.com/comjnl/article-lookup/doi/10.1093/comjnl/8.3.250},
  urldate = {2024-06-15},
  langid = {english},
  keywords = {Branch and Bound,Integer Programm},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Zeitschriftenartikel\Dakin - 1965 - A tree-search algorithm for mixed integer programming problems [dakin65jo].pdf}
}

@article{davis62jo,
  title = {A Machine Program for Theorem-Proving},
  author = {Davis, Martin and Logemann, George and Loveland, Donald},
  date = {1962-07},
  journaltitle = {Communications of the ACM},
  shortjournal = {Commun. ACM},
  volume = {5},
  number = {7},
  pages = {394--397},
  issn = {0001-0782, 1557-7317},
  doi = {10.1145/368273.368557},
  url = {https://dl.acm.org/doi/10.1145/368273.368557},
  urldate = {2024-07-27},
  abstract = {The programming of a proof procedure is discussed in connection with trial runs and possible improvements.},
  langid = {english},
  keywords = {new},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Zeitschriftenartikel\Davis et al - 1962 - A machine program for theorem-proving [davis62jo].pdf}
}

@article{delec22jo,
  title = {Sequence {{Variables}} for {{Routing Problems}}},
  author = {Delecluse, Augustin and Schaus, Pierre and Van Hentenryck, Pascal},
  namea = {Solnon, Christine},
  nameatype = {collaborator},
  date = {2022},
  journaltitle = {LIPIcs, Volume 235, CP 2022},
  volume = {235},
  pages = {19:1-19:17},
  publisher = {Schloss Dagstuhl – Leibniz-Zentrum für Informatik},
  issn = {1868-8969},
  doi = {10.4230/LIPICS.CP.2022.19},
  url = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.CP.2022.19},
  urldate = {2024-06-12},
  abstract = {Constraint Programming (CP) is one of the most flexible approaches for modeling and solving vehicle routing problems (VRP). This paper proposes the sequence variable domain, that is inspired by the insertion graph introduced in [Bent and Van Hentenryck, 2004] and the subset bound domain for set variables. This domain representation, which targets VRP applications, allows for an efficient insertion-based search on a partial tour and the implementation of simple, yet efficient filtering algorithms for constraints that enforce time-windows on the visits and capacities on the vehicles. Experiment results demonstrate the efficiency and flexibility of this CP domain for solving some hard VRP problems, including the Dial-A-Ride, the Patient Transportation, and the asymmetric TSP with time windows.},
  isbn = {9783959772402},
  langid = {english},
  keywords = {Constraint Programming,Vehicle Routing},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Datensatz\Van Hentenryck - 2022 - Pascal Van Hentenryck [vanh22da].pdf}
}

@article{duboi96jo,
  title = {Possibility Theory in Constraint Satisfaction Problems: {{Handling}} Priority, Preference and Uncertainty},
  shorttitle = {Possibility Theory in Constraint Satisfaction Problems},
  author = {Dubois, Didier},
  date = {1996-10},
  journaltitle = {Applied Intelligence},
  shortjournal = {Appl Intell},
  volume = {6},
  number = {4},
  pages = {287--309},
  issn = {0924-669X, 1573-7497},
  doi = {10.1007/BF00132735},
  url = {http://link.springer.com/10.1007/BF00132735},
  urldate = {2024-06-14},
  abstract = {In classical Constraint Satisfaction Problems (CSPs) knowledge is embedded in a set of hard constraints, each one restricting the possible values of a set of variables. However constraints in real world problems are seldom hard, and CSP’s are often idealizations that do not account for the preference among feasible solutions. Moreover some constraints may have priority over others. Lastly, constraints may involve uncertain parameters. This paper advocates the use of fuzzy sets and possibility theory as a realistic approach for the representation of these three aspects. Fuzzy constraints encompass both preference relations among possible instantiations and priorities among constraints. In a Fuzzy Constraint Satisfaction Problem (FCSP), a constraint is satisfied to a degree (rather than satisfied or not satisfied) and the acceptability of a potential solution becomes a gradual notion. Even if the FCSP is partially inconsistent, best instantiations are provided owing to the relaxation of some constraints. Fuzzy constraints are thus flexible. CSP notions of consistency and k-consistency can be extended to this framework and the classical algorithms used in CSP resolution (e.g., tree search and filtering) can be adapted without losing much of their efficiency. Most classical theoretical results remain applicable to FCSPs. In the paper, various types of constraints are modelled in the same framework. The handling of uncertain parameters is carried out in the same setting because possibility theory can account for both preference and uncertainty. The presence of uncertain parameters leads to ill-defined CSPs, where the set of constraints which defines the problem is not precisely known.},
  langid = {english},
  keywords = {Constraint Programming},
  file = {C:\Users\Daniel\Zotero\storage\JXW29FTY\Dubois et al. - 1996 - Possibility theory in constraint satisfaction prob.pdf}
}

@incollection{een04bo,
  title = {An {{Extensible SAT-solver}}},
  booktitle = {Theory and {{Applications}} of {{Satisfiability Testing}}},
  author = {Eén, Niklas and Sörensson, Niklas},
  editor = {Giunchiglia, Enrico and Tacchella, Armando},
  editora = {Goos, Gerhard and Hartmanis, Juris and Van Leeuwen, Jan},
  editoratype = {redactor},
  date = {2004},
  volume = {2919},
  pages = {502--518},
  publisher = {Springer Berlin Heidelberg},
  location = {Berlin, Heidelberg},
  doi = {10.1007/978-3-540-24605-3_37},
  url = {http://link.springer.com/10.1007/978-3-540-24605-3_37},
  urldate = {2024-07-27},
  abstract = {In this article1, we present a small, complete, and efficient SAT-solver in the style of conflict-driven learning, as exemplified by CHAFF. We aim to give sufficient details about implementation to enable the reader to construct his or her own solver in a very short time. This will allow users of SAT-solvers to make domain specific extensions or adaptions of current state-of-the-art SAT-techniques, to meet the needs of a particular application area. The presented solver is designed with this in mind, and includes among other things a mechanism for adding arbitrary boolean constraints. It also supports solving a series of related SAT-problems efficiently by an incremental SAT-interface.},
  isbn = {978-3-540-20851-8 978-3-540-24605-3},
  langid = {english},
  keywords = {new},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Buchteil\Eén, Sörensson - 2004 - An Extensible SAT-solver [een04bo] Series Title Lecture Notes in Computer Science DOI 10.1007978-3-540-24605-3_37.pdf}
}

@online{Empirwe,
  title = {An {{Empirical Evaluation}} of {{Portfolios Approaches}} for Solving {{CSPs}}},
  url = {https://ar5iv.labs.arxiv.org/html/1212.0692},
  urldate = {2024-07-28},
  abstract = {Recent research in areas such as SAT solving and Integer Linear Programming has shown that the performances of a single arbitrarily efficient solver can be significantly outperformed by a portfolio of possibly slower o…},
  langid = {english},
  organization = {ar5iv},
  keywords = {new},
  file = {C:\Users\Daniel\Zotero\storage\3BCZUEFI\1212.html}
}

@online{GECODwe,
  title = {{{GECODE}} - {{An}} Open, Free, Efficient Constraint Solving Toolkit},
  url = {https://www.gecode.org/},
  urldate = {2024-06-13},
  keywords = {Constraint Programming},
  file = {C:\Users\Daniel\Zotero\storage\QVDNSWR3\www.gecode.org.html}
}

@article{gedik16jo,
  title = {Analysis of a Parallel Machine Scheduling Problem with Sequence Dependent Setup Times and Job Availability Intervals},
  author = {Gedik, Ridvan and Rainwater, Chase and Nachtmann, Heather and Pohl, Ed A.},
  date = {2016-06},
  journaltitle = {European Journal of Operational Research},
  shortjournal = {European Journal of Operational Research},
  volume = {251},
  number = {2},
  pages = {640--650},
  issn = {03772217},
  doi = {10.1016/j.ejor.2015.11.020},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0377221715010693},
  urldate = {2024-06-14},
  abstract = {In this study, we propose constraint programming (CP) model and logic-based Benders algorithms in order to make the best decisions for scheduling non-identical jobs with availability intervals and sequence dependent setup times on unrelated parallel machines in a fixed planning horizon. In this problem, each job has a profit, cost and must be assigned to at most one machine in such a way that total profit is maximized. In addition, the total cost has to be less than or equal to a budget level. Computational tests are performed on a real-life case study prepared in collaboration with the U.S. Army Corps of Engineers (USACE). Our initial investigations show that the pure CP model is very efficient in obtaining good quality feasible solutions but, fails to report the optimal solution for the majority of the problem instances. On the other hand, the two logic-based Benders decomposition algorithms are able to obtain near optimal solutions for 86 instances out of 90 examinees. For the remaining instances, they provide a feasible solution. Further investigations show the high quality of the solutions obtained by the pure CP model.},
  langid = {english},
  keywords = {Constraint Programming},
  file = {C:\Users\Daniel\Zotero\storage\LLAD6LK7\Gedik et al. - 2016 - Analysis of a parallel machine scheduling problem .pdf}
}

@article{goosjo,
  title = {Lecture {{Notes}} in {{Computer Science}}},
  author = {Goos, Gerhard and Hartmanis, Juris and family=Leeuwen, given=Jan, prefix=van, useprefix=true and Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M and Kobsa, Alfred and Mattern, Friedemann and Mitchell, John C and Naor, Moni and Nierstrasz, Oscar and Rangan, C Pandu and Steffen, Bernhard},
  langid = {english},
  keywords = {new},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Zeitschriftenartikel\Goos et al - Lecture Notes in Computer Science [goosjo].pdf}
}

@book{gritz13bo,
  title = {Grundlagen der Mathematischen Optimierung: Diskrete Strukturen, Komplexitätstheorie, Konvexitätstheorie, Lineare Optimierung, Simplex-Algorithmus, Dualität},
  shorttitle = {Grundlagen der Mathematischen Optimierung},
  author = {Gritzmann, Peter},
  date = {2013},
  publisher = {Springer Fachmedien Wiesbaden},
  location = {Wiesbaden},
  url = {https://link.springer.com/10.1007/978-3-8348-2011-2},
  urldate = {2024-06-14},
  isbn = {978-3-528-07290-2 978-3-8348-2011-2},
  langid = {ngerman},
  keywords = {3-Sat,K-Sat},
  annotation = {3-Sat\\
K-Sat},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Buch\Gritzmann - 2013 - Grundlagen der Mathematischen Optimierung - Diskrete Strukturen, [gritz13bo] DOI 10.1007978-3-8348-2011-2.pdf}
}

@unpublished{gunspr,
  title = {Ml4cp2023\_intro\_cp-Tiasguns.Pdf},
  author = {Guns, Prof. Tias},
  url = {https://school.a4cp.org/summer2023/slides/ml4cp2023_intro_cp-tiasguns.pdf},
  urldate = {2023-11-12},
  keywords = {Constraint Programming,new},
  file = {C:\Users\Daniel\Zotero\storage\ZEZ7TQJL\ml4cp2023_intro_cp-tiasguns.pdf}
}

@book{hofst07bo,
  title = {Einführung in die Constraint-Programmierung: Grundlagen, Methoden, Sprachen, Anwendungen},
  shorttitle = {Einführung in die Constraint-Programmierung},
  author = {Hofstedt, Petra and Wolf, Armin},
  date = {2007},
  series = {eXamen.press},
  publisher = {Springer},
  location = {Berlin Heidelberg},
  abstract = {Die Constraint-Programmierung liefert Methoden zur effizienten Modellierung von Systemen oder zur Lösung von Problemstellungen, bei denen nur unvollständige Informationen vorliegen (z.B. Entscheidungssysteme, Optimierungsprobleme, Analyse stochastischer Prozesse), sowie zur Lösung kombinatorischer Probleme (Ressourcenmanagement) oder auch bei der Entwicklung komplexer Deduktionssysteme. Dieses Lehrbuch gibt eine kompakte Einführung in die Constraint-Programmierung. Dabei werden neben allgemeinen theoretischen Grundlagen auch Sprachen, Methoden und Verfahren zur Modellierung und Lösung von Constraint-Problemen vorgestellt sowie deren Anwendungsfelder betrachtet und anhand typischer Beispiele wie Terminplanung, Finanzwesen, Optimierung, Simulation und Diagnose vergegenständlicht. Das Buch richtet sich an Studierende der Informatik im Hauptstudium. Es basiert auf einer einsemestrigen Vorlesung mit Übungen der Autoren. TOC:Einführung.- Prädikatenlogik.- Logische Programmierung.- Logische Programmierung mit Constraints.- Constraints und Constraint-Systeme.- Constraint-Löser.- Finite-Domain-Constraints.- Lineare Arithmetische Constraints.- Intervall-Arithmetik-Constraints.- Constraint-Sprachen.- Constraint-Handling-Rules.- Concurrent-Constraint-Programmierung.- Constraintimperative und Objektorientierte Programmierung.- Multiparadigmen-Programmiersprachen.- Modellierung von Constraint-Problemen.- Globale Constraints.- Redundante und implizite Constraints.- Symmetrien und Transformationen.- Lösen von Constraint-Problemen.- Suche und Optimierung.- Heuristiken},
  isbn = {978-3-540-23184-4},
  langid = {ngerman},
  pagetotal = {388},
  keywords = {Constraint Programming,Simplex Method},
  annotation = {Constraint Programming\\
Simplex Method},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Buch\Hofstedt, Wolf - 2007 - Einführung in die Constraint-Programmierung - Grundlagen, Methoden, Sprachen,.pdf}
}

@online{Homewe,
  title = {Home | {{MiniZinc Challenge}} 2024},
  url = {https://challenge.minizinc.org/},
  urldate = {2024-06-14},
  keywords = {Constraint Programming,MiniZinc},
  file = {C:\Users\Daniel\Zotero\storage\KETX63LV\challenge.minizinc.org.html}
}

@online{IBMIwe,
  title = {IBM ILOG CPLEX Optimization Studio},
  url = {https://www.ibm.com/de-de/products/ilog-cplex-optimization-studio},
  urldate = {2024-06-13},
  abstract = {IBM ILOG CPLEX Optimization Studio ist eine Software zur Entscheidungsoptimierung für die Erstellung und Lösung komplexer Optimierungsmodelle.},
  langid = {ngerman},
  keywords = {Constraint Programming}
}

@online{kotar21pr,
  title = {End-to-{{End Constrained Optimization Learning}}: {{A Survey}}},
  shorttitle = {End-to-{{End Constrained Optimization Learning}}},
  author = {Kotary, James and Fioretto, Ferdinando and Van Hentenryck, Pascal and Wilder, Bryan},
  date = {2021-03-30},
  eprint = {2103.16378},
  eprinttype = {arXiv},
  eprintclass = {cs},
  url = {http://arxiv.org/abs/2103.16378},
  urldate = {2023-11-09},
  abstract = {This paper surveys the recent attempts at leveraging machine learning to solve constrained optimization problems. It focuses on surveying the work on integrating combinatorial solvers and optimization methods with machine learning architectures. These approaches hold the promise to develop new hybrid machine learning and optimization methods to predict fast, approximate, solutions to combinatorial problems and to enable structural logical inference. This paper presents a conceptual review of the recent advancements in this emerging area.},
  pubstate = {prepublished},
  keywords = {Computer Science - Artificial Intelligence,Computer Science - Machine Learning,Constraint Programming},
  file = {C\:\\Users\\Daniel\\OneDrive - Universität Augsburg\\Zotero\\Preprint\\Kotary et al - 2021 - End-to-End Constrained Optimization Learning - A Survey.pdf;C\:\\Users\\Daniel\\Zotero\\storage\\DK7DRNFD\\2103.html}
}

@unpublished{kotth12jo,
  title = {Algorithm {{Selection}} for {{Combinatorial Search Problems}}: {{A Survey}}},
  shorttitle = {Algorithm {{Selection}} for {{Combinatorial Search Problems}}},
  author = {Kotthoff, Lars},
  date = {2012-10-30},
  eprint = {1210.7959},
  eprinttype = {arXiv},
  eprintclass = {cs},
  url = {http://arxiv.org/abs/1210.7959},
  urldate = {2024-06-15},
  abstract = {The Algorithm Selection Problem is concerned with selecting the best algorithm to solve a given problem on a case-by-case basis. It has become especially relevant in the last decade, as researchers are increasingly investigating how to identify the most suitable existing algorithm for solving a problem instead of developing new algorithms. This survey presents an overview of this work focusing on the contributions made in the area of combinatorial search problems, where Algorithm Selection techniques have achieved significant performance improvements. We unify and organise the vast literature according to criteria that determine Algorithm Selection systems in practice. The comprehensive classification of approaches identifies and analyses the different directions from which Algorithm Selection has been approached. This paper contrasts and compares different methods for solving the problem as well as ways of using these solutions. It closes by identifying directions of current and future research.},
  langid = {english},
  keywords = {Important},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Zeitschriftenartikel\Kotthoff - 2012 - Algorithm Selection for Combinatorial Search Problems - A Survey [kotth12jo] arXiv1210.7959 [cs].pdf}
}

@unpublished{kotth23pr,
  title = {Getting the {{Best}} out of Your {{Constraint Solver}}: {{Portfolios}} and {{Automated Tuning}}},
  author = {Kotthoff, Lars},
  date = {2023-07-11},
  eventtitle = {{{ACP Summer School}}},
  langid = {english},
  venue = {Leuven},
  keywords = {Constraint Programming,Important},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Vortrag\Kotthoff - 2023 - Getting the Best out of your Constraint Solver - Portfolios and Automated Tuning [kotth23pr].pdf}
}

@article{labor18jo,
  title = {{{IBM ILOG CP}} Optimizer for Scheduling},
  author = {Laborie, Philippe and Rogerie, Jérôme and Shaw, Paul and Vilím, Petr},
  date = {2018-04-01},
  journaltitle = {Constraints},
  shortjournal = {Constraints},
  volume = {23},
  number = {2},
  pages = {210--250},
  issn = {1572-9354},
  doi = {10.1007/s10601-018-9281-x},
  url = {https://doi.org/10.1007/s10601-018-9281-x},
  urldate = {2024-06-13},
  abstract = {IBM ILOG CP Optimizer is a generic CP-based system to model and solve scheduling problems. It provides an algebraic language with simple mathematical concepts to capture the temporal dimension of scheduling problems in a combinatorial optimization framework. CP Optimizer implements a model-and-run paradigm that vastly reduces the burden on the user to understand CP or scheduling algorithms: modeling is by far the most important. The automatic search provides good performance out of the box and it is continuously improving. This article gives a detailed overview of CP Optimizer for scheduling: typical applications, modeling concepts, examples, automatic search, tools and performance.},
  langid = {english},
  keywords = {Constraint Programming,Scheduling},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Zeitschriftenartikel\Laborie et al - 2018 - IBM ILOG CP optimizer for scheduling [labor18joa].pdf}
}

@article{marat13jo,
  title = {Applying {{Machine Learning Techniques}} to {{ASP Solving}}},
  author = {Maratea, Marco and Pulina, Luca and Ricca, Francesco},
  namea = {Dovier, Agostino and Costa, Vítor Santos},
  nameatype = {collaborator},
  date = {2013},
  journaltitle = {LIPIcs, Volume 17, ICLP 2012},
  volume = {17},
  pages = {37--48},
  publisher = {Schloss Dagstuhl – Leibniz-Zentrum für Informatik},
  issn = {1868-8969},
  doi = {10.4230/LIPICS.ICLP.2012.37},
  url = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ICLP.2012.37},
  urldate = {2024-06-15},
  abstract = {Having in mind the task of improving the solving methods for Answer Set Programming (ASP), there are two usual ways to reach this goal: (i) extending state-of-the-art techniques and ASP solvers, or (ii) designing a new ASP solver from scratch. An alternative to these trends is to build on top of state-of-the-art solvers, and to apply machine learning techniques for choosing automatically the “best” available solver on a per-instance basis.},
  isbn = {9783939897439},
  langid = {english},
  file = {C:\Users\Daniel\Zotero\storage\UINCRN8U\Maratea et al. - 2013 - Applying Machine Learning Techniques to ASP Solvin.pdf}
}

@book{marti21bo,
  title = {Engineering {{Design Optimization}}},
  author = {Martins, Joaquim R. R. A. and Ning, Andrew},
  date = {2021-11-18},
  edition = {1},
  publisher = {Cambridge University Press},
  url = {https://www.cambridge.org/core/product/identifier/9781108980647/type/book},
  urldate = {2024-06-15},
  abstract = {Based on course-tested material, this rigorous yet accessible graduate textbook covers both fundamental and advanced optimization theory and algorithms. It covers a wide range of numerical methods and topics, including both gradient-based and gradient-free algorithms, multidisciplinary design optimization, and uncertainty, with instruction on how to determine which algorithm should be used for a given application. It also provides an overview of models and how to prepare them for use with numerical optimization, including derivative computation. Over 400 high-quality visualizations and numerous examples facilitate understanding of the theory, and practical tips address common issues encountered in practical engineering design optimization and how to address them. Numerous end-of-chapter homework problems, progressing in difficulty, help put knowledge into practice. Accompanied online by a solutions manual for instructors and source code for problems, this is ideal for a one- or two-semester graduate course on optimization in aerospace, civil, mechanical, electrical, and chemical engineering departments.},
  isbn = {978-1-108-98064-7 978-1-108-83341-7},
  langid = {english},
  keywords = {Constraint Optimization Problem},
  annotation = {Constraint Optimization Problem},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Buch\Martins, Ning - 2021 - Engineering Design Optimization [marti21bo] Constraint Optimization Problem.pdf}
}

@online{MiniZwe,
  title = {{{MiniZinc}}},
  url = {https://www.minizinc.org/},
  urldate = {2024-06-14},
  keywords = {Constraint Programming,MiniZinc},
  file = {C:\Users\Daniel\Zotero\storage\BJSNVISH\www.minizinc.org.html}
}

@online{MIPPrwe,
  title = {MIP-Problem lösen | OR-Tools},
  url = {https://developers.google.com/optimization/mip/mip_example?hl=de},
  urldate = {2024-05-16},
  langid = {ngerman},
  organization = {Google for Developers},
  keywords = {Constraint Programming,new},
  file = {C:\Users\Daniel\Zotero\storage\GXHFD9GR\mip_example.html}
}

@online{Mixedbl,
  title = {Mixed-{{Integer Programming}} ({{MIP}}) – {{A Primer}} on the {{Basics}}},
  url = {https://www.gurobi.com/resources/mixed-integer-programming-mip-a-primer-on-the-basics/},
  urldate = {2024-05-16},
  langid = {american},
  organization = {Gurobi Optimization},
  keywords = {Branch and Bound,Linear Programming},
  file = {C:\Users\Daniel\Zotero\storage\ZGFLWICH\mixed-integer-programming-mip-a-primer-on-the-basics.html}
}

@online{ML4CPwe,
  title = {{{ML4CP}}},
  url = {https://school.a4cp.org/summer2023/},
  urldate = {2023-11-09},
  keywords = {Constraint Programming},
  file = {C:\Users\Daniel\Zotero\storage\8GVH8LZ9\summer2023.html}
}

@book{noced06bo,
  title = {Numerical Optimization},
  author = {Nocedal, Jorge and Wright, Stephen J.},
  date = {2006},
  series = {Springer Series in Operations Research},
  edition = {2nd ed},
  publisher = {Springer},
  location = {New York},
  isbn = {978-0-387-30303-1},
  langid = {english},
  pagetotal = {664},
  keywords = {Convex functions},
  annotation = {Convex functions},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Buch\Nocedal, Wright - 2006 - Numerical optimization [noced06bo] Convex functions.pdf}
}

@article{omahjo,
  title = {Using {{Case-based Reasoning}} in an {{Algorithm Portfolio}} for {{Constraint Solving}}},
  author = {O’Mahony, Eoin and Hebrard, Emmanuel and Holland, Alan and Nugent, Conor and O’Sullivan, Barry},
  abstract = {It has been shown in areas such as satisfiability testing and integer linear programming that a carefully chosen combination of solvers can outperform the best individual solver for a given set of problems. This selection process is usually performed using a machine learning technique based on feature data extracted from constraint satisfaction problems. In this paper we present CPHYDRA, an algorithm portfolio for constraint satisfaction that uses case-based reasoning to determine how to solve an unseen problem instance by exploiting a case base of problem solving experience. We demonstrate the superiority of our portfolio over each of its constituent solvers using challenging benchmark problem instances from the most recent CSP Solver Competition.},
  langid = {english},
  keywords = {Case Based Reasoning},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Zeitschriftenartikel\O’Mahony et al - Using Case-based Reasoning in an Algorithm Portfolio for Constraint Solving [omahjo].pdf}
}

@online{ORToowe,
  title = {OR-Tools},
  url = {https://developers.google.com/optimization?hl=de},
  urldate = {2024-06-13},
  abstract = {Die OR-Tools-Suite bietet Softwarebibliotheken und APIs für die Vorgangsoptimierung, mit denen die Einschränkung, die lineare Optimierung sowie Fluss- und Grafikalgorithmen optimiert werden.},
  langid = {ngerman},
  organization = {Google for Developers},
  keywords = {Constraint Programming,new},
  file = {C:\Users\Daniel\Zotero\storage\EMREIYBY\optimization.html}
}

@article{popes22jo,
  title = {An Overview of Machine Learning Techniques in Constraint Solving},
  author = {Popescu, Andrei and Polat-Erdeniz, Seda and Felfernig, Alexander and Uta, Mathias and Atas, Müslüm and Le, Viet-Man and Pilsl, Klaus and Enzelsberger, Martin and Tran, Thi Ngoc Trang},
  date = {2022-02},
  journaltitle = {Journal of Intelligent Information Systems},
  shortjournal = {J Intell Inf Syst},
  volume = {58},
  number = {1},
  pages = {91--118},
  issn = {0925-9902, 1573-7675},
  doi = {10.1007/s10844-021-00666-5},
  url = {https://link.springer.com/10.1007/s10844-021-00666-5},
  urldate = {2024-06-15},
  abstract = {Constraint solving is applied in different application contexts. Examples thereof are the configuration of complex products and services, the determination of production schedules, and the determination of recommendations in online sales scenarios. Constraint solvers apply, for example, search heuristics to assure adequate runtime performance and prediction quality. Several approaches have already been developed showing that machine learning (ML) can be used to optimize search processes in constraint solving. In this article, we provide an overview of the state of the art in applying ML approaches to constraint solving problems including constraint satisfaction, SAT solving, answer set programming (ASP) and applications thereof such as configuration, constraint-based recommendation, and model-based diagnosis. We compare and discuss the advantages and disadvantages of these approaches and point out relevant directions for future work.},
  langid = {english},
  keywords = {Important},
  file = {C:\Users\Daniel\Zotero\storage\S8BU9AY9\Popescu et al. - 2022 - An overview of machine learning techniques in cons.pdf}
}

@book{rossi06bo,
  title = {Handbook of Constraint Programming},
  editor = {Rossi, Francesca and Van Beek, Peter and Walsh, Toby},
  date = {2006},
  series = {Foundations of Artificial Intelligence},
  edition = {1st ed},
  publisher = {Elsevier},
  location = {Amsterdam ; Boston},
  isbn = {978-0-444-52726-4},
  langid = {english},
  pagetotal = {955},
  keywords = {Constraint Programming,Vehicle Routing},
  annotation = {OCLC: ocm70408044},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Buch\Rossi et al - 2006 - Handbook of constraint programming [rossi06bo] OCLC ocm70408044.pdf}
}

@online{Solviwe,
  title = {3.3. {{Solving Technologies}} and {{Solver Backends}} — {{The MiniZinc Handbook}} 2.3.0},
  url = {https://docs.minizinc.dev/en/2.3.0/solvers.html},
  urldate = {2024-06-11},
  keywords = {Constraint Programming,new},
  file = {C:\Users\Daniel\Zotero\storage\5D3V96FY\solvers.html}
}

@online{Solviwea,
  title = {3.3. {{Solving Technologies}} and {{Solver Backends}} — {{The MiniZinc Handbook}} 2.4.3},
  url = {https://docs.minizinc.dev/en/2.4.3/solvers.html},
  urldate = {2024-06-13},
  keywords = {Constraint Programming},
  file = {C:\Users\Daniel\Zotero\storage\W54VRUYR\solvers.html}
}

@book{spill12bo,
  title = {Basiswissen Softwaretest: Aus- und Weiterbildung zum Certified Tester ; Foundation Level nach ISTQB-Standard},
  shorttitle = {Basiswissen Softwaretest},
  author = {Spillner, Andreas and Linz, Tilo},
  date = {2012},
  series = {ISQI},
  edition = {5., überarbeitete und aktualisierte Auflage},
  publisher = {dpunkt.verlag GmbH},
  location = {Heidelberg},
  isbn = {978-3-86490-024-2},
  langid = {german},
  pagetotal = {290},
  keywords = {new},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Buch\Spillner, Linz - 2012 - Basiswissen Softwaretest - Aus- und Weiterbildung zum Certified Tester ; [spill12bo].pdf}
}

@incollection{stuck10bo,
  title = {Lazy {{Clause Generation}}: {{Combining}} the {{Power}} of {{SAT}} and {{CP}} (and {{MIP}}?) {{Solving}}},
  shorttitle = {Lazy {{Clause Generation}}},
  booktitle = {Integration of {{AI}} and {{OR Techniques}} in {{Constraint Programming}} for {{Combinatorial Optimization Problems}}},
  author = {Stuckey, Peter J.},
  editor = {Lodi, Andrea and Milano, Michela and Toth, Paolo},
  editora = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard},
  editoratype = {redactor},
  date = {2010},
  volume = {6140},
  pages = {5--9},
  publisher = {Springer Berlin Heidelberg},
  location = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-13520-0_3},
  url = {http://link.springer.com/10.1007/978-3-642-13520-0_3},
  urldate = {2024-07-28},
  abstract = {Finite domain propagation solving, the basis of constraint programming (CP) solvers, allows building very high-level models of problems, and using highly specific inference encapsulated in complex global constraints, as well as programming the search for solutions to take into account problem structure. Boolean satisfiability (SAT) solving allows the construction of a graph of inferences made in order to determine and record effective nogoods which prevent the searching of similar parts of the problem, as well as the determination of those variables which form a tightly connected hard part of the problem, thus allowing highly effective automatic search strategies concentrating on these hard parts. Lazy clause generation is a hybrid of CP and SAT solving that combines the strengths of the two approaches. It provides state-ofthe-art solutions for a number of hard combinatorial optimization and satisfaction problems. In this invited talk we explain lazy clause generation, and explore some of the many design choices in building such a hybrid system, we also discuss how to further incorporate mixed integer programming (MIP) solving to see if we can also inherit its advantages in combinatorial optimization.},
  isbn = {978-3-642-13519-4 978-3-642-13520-0},
  langid = {english},
  keywords = {new},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Buchteil\Stuckey - 2010 - Lazy Clause Generation - Combining the Power of SAT and CP (and MIP -) Solving [stuck10bo] Series Title Lecture Notes in Computer Science DOI 10.1007978-3-642-13520-0_3.pdf}
}

@video{toms23vi,
  entrysubtype = {video},
  title = {The {{Art}} of {{Linear Programming}}},
  editor = {{Tom S}},
  editortype = {director},
  date = {2023-07-04},
  url = {https://www.youtube.com/watch?v=E72DWgKP_1Y},
  urldate = {2024-06-15},
  abstract = {A visual-heavy introduction to Linear Programming including basic definitions, solution via the Simplex method, the principle of duality and Integer Linear Programming. \#some3 More problems: https://slama.dev/youtube/linear-prog... Made as my entry to SoME3: https://3blue1brown.substack.com/p/so... ------------------ Timetable: 0:00 - Introduction 0:26 - Basics 3:44 - Simplex Method 11:47 - Duality 14:01 - Integer Linear Programming 17:31 - Conclusion ------------------ Source code: https://github.com/xiaoxiae/videos/tr... Music (in the order it appears in the video): ► Cases to Rest by Blue Dot Sessions: https://app.sessions.blue/browse/trac... ► Thannoid by Blue Dot Sessions: https://app.sessions.blue/browse/trac... ► ZigZag Heart by Blue Dot Sessions: https://app.sessions.blue/browse/trac... ► Maisie Dreamer by Blue Dot Sessions: https://app.sessions.blue/browse/trac... ► Night Light by Blue Dot Sessions: https://app.sessions.blue/browse/trac... Software used: ► Manim (animation software): https://github.com/ManimCommunity/manim/ ► Kdenlive (video cutting): https://kdenlive.org/en/ ► ffmpeg (audio/video processing): https://ffmpeg.org/ ► OBS (audio/video recording): https://obsproject.com/download ► arecord (audio recording): https://linux.die.net/man/1/arecord ► sox (audio processing): http://sox.sourceforge.net/ ► Inkscape (vector image editing): https://inkscape.org/ ► Midjourney (image generation): https://www.midjourney.com/app/ Social media: ► Website (for other things I'm up to): https://slama.dev/ ► Patreon (if you'd like to support me): ~~/~ytoms~~ Thanks to Matěj Kripner, Martin Balko, Lucia Zhang, Václav Rozhoň (@polylog), Kateřina Sulková, Mohit Shrestha, Teo Tuicu and Tomáš Sláma (my dad, not me) for valuable feedback. ------------------ [EN] Gerard Sierksma; Yori Zwols (2015). Linear and Integer Optimization: Theory and Practice https://www.taylorfrancis.com/books/m... [CZ] Přednáška Jiřího Sgalla: Lineární programování a kombinatorická optimalizace https://iuuk.mff.cuni.cz/\textasciitilde sgall/vyuka... [EN] George B. Dantzig (1982): Reminiscences about the origins of linear programming https://apps.dtic.mil/sti/pdfs/ADA112...},
  keywords = {Linear Programming,Simplex Method}
}

@video{toms23via,
  entrysubtype = {video},
  title = {The {{Art}} of {{Linear Programming}}},
  editor = {{Tom S}},
  editortype = {director},
  date = {2023-07-04},
  url = {https://www.youtube.com/watch?v=E72DWgKP_1Y},
  urldate = {2024-07-19},
  abstract = {A visual-heavy introduction to Linear Programming including basic definitions, solution via the Simplex method, the principle of duality and Integer Linear Programming. \#some3 More problems: https://slama.dev/youtube/linear-prog... Made as my entry to SoME3: https://3blue1brown.substack.com/p/so... ------------------ Timetable: 0:00 - Introduction 0:26 - Basics 3:44 - Simplex Method 11:47 - Duality 14:01 - Integer Linear Programming 17:31 - Conclusion ------------------ Source code: https://github.com/xiaoxiae/videos/tr... Music (in the order it appears in the video): ► Cases to Rest by Blue Dot Sessions: https://app.sessions.blue/browse/trac... ► Thannoid by Blue Dot Sessions: https://app.sessions.blue/browse/trac... ► ZigZag Heart by Blue Dot Sessions: https://app.sessions.blue/browse/trac... ► Maisie Dreamer by Blue Dot Sessions: https://app.sessions.blue/browse/trac... ► Night Light by Blue Dot Sessions: https://app.sessions.blue/browse/trac... Software used: ► Manim (animation software): https://github.com/ManimCommunity/manim/ ► Kdenlive (video cutting): https://kdenlive.org/en/ ► ffmpeg (audio/video processing): https://ffmpeg.org/ ► OBS (audio/video recording): https://obsproject.com/download ► arecord (audio recording): https://linux.die.net/man/1/arecord ► sox (audio processing): http://sox.sourceforge.net/ ► Inkscape (vector image editing): https://inkscape.org/ ► Midjourney (image generation): https://www.midjourney.com/app/ Social media: ► Website (for other things I'm up to): https://slama.dev/ ► Patreon (if you'd like to support me): ~~/~ytoms~~ Thanks to Matěj Kripner, Martin Balko, Lucia Zhang, Václav Rozhoň (@polylog), Kateřina Sulková, Mohit Shrestha, Teo Tuicu and Tomáš Sláma (my dad, not me) for valuable feedback. ------------------ [EN] Gerard Sierksma; Yori Zwols (2015). Linear and Integer Optimization: Theory and Practice https://www.taylorfrancis.com/books/m... [CZ] Přednáška Jiřího Sgalla: Lineární programování a kombinatorická optimalizace https://iuuk.mff.cuni.cz/\textasciitilde sgall/vyuka... [EN] George B. Dantzig (1982): Reminiscences about the origins of linear programming https://apps.dtic.mil/sti/pdfs/ADA112...},
  keywords = {new}
}

@video{visua21vi,
  entrysubtype = {video},
  title = {What Is {{Linear Programming}} ({{LP}})? (In 2 Minutes)},
  shorttitle = {What Is {{Linear Programming}} ({{LP}})?},
  editor = {{Visually Explained}},
  editortype = {director},
  date = {2021-11-12},
  url = {https://www.youtube.com/watch?v=C0TTxV0n9OA},
  urldate = {2023-11-09},
  abstract = {Overview of Linear Programming in 2 minutes. ---------------------- Additional Information on the distinction between "Polynomial" vs "Strongly Polynomial" algorithms: An algorithm for solving LPs of the form  max c\textasciicircum t x s.t. Ax \textbackslash le b runs in polynomial time if its running time can be bounded by a polynomial D\textasciicircum r, where "r" is some integer, and D is the bit-size of the data of the problem, or in other words, D is the amount of memory that it takes to store the matrix A and the vectors b and c. On the other hand, an algorithm runs in strongly polynomial time if its running time can be bounded by a polynomial n\textasciicircum r m\textasciicircum s, where "r" and "s" are integers, "n" is the number of variables and "m" is the number of constraints.  The distinction is subtle, but is an important one. Essentially, a polynomial time algorithm is allowed to take more time as the size of the coefficients of A grows (while keeping the dimensions of A constant), but a strongly polynomial time algorithm is not. (I glossed over some details here. For example in the definition of strong polynomial time algorithms, we assume that the basic arithmetic operations take a constant time no matter the size of the operands.) The interior point method is a polynomial time algorithm, but not a strongly polynomial time one (e.g., https://arxiv.org/abs/1708.01544). ---------------------- Typos: - "Schedueling" should be "Scheduling" -------------- Timestamps: - 0:00 Motivating Example - 0:39 Definition - 1:07 Applications - 1:42 Code - 2:00 Open Problems --------------- Credit: 🐍 Manim and Python : https://github.com/3b1b/manim 🐵 Blender3D: https://www.blender.org/ 🗒️ Emacs: https://www.gnu.org/software/emacs/ Music/Sound: www.bensound.com, Zapsplat.com This video would not have been possible without the help of Gökçe Dayanıklı.},
  keywords = {Constraint Programming}
}

@video{visua22vi,
  entrysubtype = {video},
  title = {What {{Does It Mean For}} a {{Matrix}} to Be {{POSITIVE}}? {{The Practical Guide}} to  {{Semidefinite Programming}}(1/4)},
  shorttitle = {What {{Does It Mean For}} a {{Matrix}} to Be {{POSITIVE}}?},
  editor = {{Visually Explained}},
  editortype = {director},
  date = {2022-01-17},
  url = {https://www.youtube.com/watch?v=2uKoKKLgZ4c},
  urldate = {2023-11-08},
  abstract = {Video series on the wonderful field of Semidefinite Programming and its applications. In  this first part, we explore the question of how we can generalize the notion of positivity to  matrices. -------------------------- Timestamps: 0:00 Intro 0:41 Questions 2:50 Definition 6:09 PSD vs eigenvalues 7:40 (Visual) examples -------------------------- Credit: 🐍 Manim and Python : https://github.com/3b1b/manim 🐵 Blender3D: https://www.blender.org/ 🗒️ Emacs: https://www.gnu.org/software/emacs/ Song: Thinking Ahead This video would not have been possible without the help of Gökçe Dayanıklı.},
  keywords = {Constraint Programming}
}

@video{visua22via,
  entrysubtype = {video},
  title = {The {{Practical Guide}} to {{Semidefinite Programming}} (2/4)},
  editor = {{Visually Explained}},
  editortype = {director},
  date = {2022-01-27},
  url = {https://www.youtube.com/watch?v=9z2OtPOi8T0},
  urldate = {2023-11-09},
  abstract = {Second video of the Semidefinite Programming series. In this video, we will see how to use semidefinite programming to solve a toy geometry problem. Python code included. -------------------------- Timestamps: 0:00 Intro 0:41 Interesting Fact about Positive Semidefinite matrices 2:17 Let's solve this problem! 5:24 Semidefinite Programming -------------------------- Credit: 🐍 Manim and Python : https://github.com/3b1b/manim 🐵 Blender3D: https://www.blender.org/ 🗒️ Emacs: https://www.gnu.org/software/emacs/ Song: Thinking Ahead This video would not have been possible without the help of Gökçe Dayanıklı.},
  keywords = {Constraint Programming}
}

@video{visua22vib,
  entrysubtype = {video},
  title = {Stability of {{Linear Dynamical Systems}}  | {{The Practical Guide}} to {{Semidefinite Programming}} (3/4)},
  editor = {{Visually Explained}},
  editortype = {director},
  date = {2022-02-16},
  url = {https://www.youtube.com/watch?v=K2Mw3fUYaHI},
  urldate = {2023-11-09},
  abstract = {Third video of the Semidefinite Programming series. In this video, we will see how to use semidefinite programming to check whether a linear dynamical system is asymptotically stable. Thanks to Lyapunov's theory, this task can be reduced to searching for a so-called Lyapunov function. Python code included as usual. -------------------------- Timestamps: 0:00 Intro 0:18 Stability 1:58 Lyapunov 4:50 Python code -------------------------- Credit: 🐍 Manim and Python : https://github.com/3b1b/manim 🐵 Blender3D: https://www.blender.org/ 🗒️ Emacs: https://www.gnu.org/software/emacs/ Toy plane model by OscarLeif Song: Thinking Ahead This video would not have been possible without the help of Gökçe Dayanıklı.},
  keywords = {Constraint Programming}
}

@video{visua22vic,
  entrysubtype = {video},
  title = {Goemans-{{Williamson Max-Cut Algorithm}} | {{The Practical Guide}} to {{Semidefinite Programming}} (4/4)},
  editor = {{Visually Explained}},
  editortype = {director},
  date = {2022-04-03},
  url = {https://www.youtube.com/watch?v=aFVnWq3RHYU},
  urldate = {2023-11-09},
  abstract = {Fourth and last video of the Semidefinite Programming series. In this video, we will go over Goemans and Williamson's algorithm for the Max-Cut problem.  Their algorithm, which is still  state-of-the-art today, is one of the biggest breakthroughs in approximation theory. Remarkably, it is based on Semidefinite Programming. Python code included as usual. -------------------------- References: - Original paper by Goemans and Williamson: https://klein.mit.edu/\textasciitilde goemans/PAPERS... - Some great lecture notes on the topic:     -  https://www.cs.cmu.edu/\textasciitilde anupamg/adv-a...     -  https://www.sumofsquares.org/public/l... -------------------------- Timestamps: 0:00 Intro 0:48 What is a cut? 1:58 Max-Cut 3:42 G-W 5:48 Python code 6:44 Analysis -------------------------- Credit: 🐍 Manim and Python : https://github.com/3b1b/manim 🐵 Blender3D: https://www.blender.org/ 🗒️ Emacs: https://www.gnu.org/software/emacs/ Song: Thinking Ahead This video would not have been possible without the help of Gökçe Dayanıklı.},
  keywords = {Constraint Programming}
}

@online{wilde18pr,
  title = {Melding the {{Data-Decisions Pipeline}}: {{Decision-Focused Learning}} for {{Combinatorial Optimization}}},
  shorttitle = {Melding the {{Data-Decisions Pipeline}}},
  author = {Wilder, Bryan and Dilkina, Bistra and Tambe, Milind},
  date = {2018-11-20},
  eprint = {1809.05504},
  eprinttype = {arXiv},
  eprintclass = {cs, stat},
  url = {http://arxiv.org/abs/1809.05504},
  urldate = {2023-11-09},
  abstract = {Creating impact in real-world settings requires artificial intelligence techniques to span the full pipeline from data, to predictive models, to decisions. These components are typically approached separately: a machine learning model is first trained via a measure of predictive accuracy, and then its predictions are used as input into an optimization algorithm which produces a decision. However, the loss function used to train the model may easily be misaligned with the end goal, which is to make the best decisions possible. Hand-tuning the loss function to align with optimization is a difficult and error-prone process (which is often skipped entirely). We focus on combinatorial optimization problems and introduce a general framework for decision-focused learning, where the machine learning model is directly trained in conjunction with the optimization algorithm to produce high-quality decisions. Technically, our contribution is a means of integrating common classes of discrete optimization problems into deep learning or other predictive models, which are typically trained via gradient descent. The main idea is to use a continuous relaxation of the discrete problem to propagate gradients through the optimization procedure. We instantiate this framework for two broad classes of combinatorial problems: linear programs and submodular maximization. Experimental results across a variety of domains show that decision-focused learning often leads to improved optimization performance compared to traditional methods. We find that standard measures of accuracy are not a reliable proxy for a predictive model's utility in optimization, and our method's ability to specify the true goal as the model's training objective yields substantial dividends across a range of decision problems.},
  pubstate = {prepublished},
  keywords = {Computer Science - Artificial Intelligence,Computer Science - Machine Learning,Constraint Programming,Statistics - Machine Learning},
  file = {C\:\\Users\\Daniel\\OneDrive - Universität Augsburg\\Zotero\\Preprint\\Wilder et al - 2018 - Melding the Data-Decisions Pipeline - Decision-Focused Learning for.pdf;C\:\\Users\\Daniel\\Zotero\\storage\\9RTINLDU\\1809.html}
}

@article{xu08jo,
  title = {{{SATzilla}}: {{Portfolio-based Algorithm Selection}} for {{SAT}}},
  shorttitle = {{{SATzilla}}},
  author = {Xu, L. and Hutter, F. and Hoos, H. H. and Leyton-Brown, K.},
  date = {2008-07-01},
  journaltitle = {Journal of Artificial Intelligence Research},
  shortjournal = {jair},
  volume = {32},
  pages = {565--606},
  issn = {1076-9757},
  doi = {10.1613/jair.2490},
  url = {https://jair.org/index.php/jair/article/view/10556},
  urldate = {2024-07-26},
  abstract = {It has been widely observed that there is no single “dominant” SAT solver; instead, different solvers perform best on different instances. Rather than following the traditional approach of choosing the best solver for a given class of instances, we advocate making this decision online on a per-instance basis. Building on previous work, we describe SATzilla, an automated approach for constructing per-instance algorithm portfolios for SAT that use socalled empirical hardness models to choose among their constituent solvers. This approach takes as input a distribution of problem instances and a set of component solvers, and constructs a portfolio optimizing a given objective function (such as mean runtime, percent of instances solved, or score in a competition). The excellent performance of SATzilla was independently verified in the 2007 SAT Competition, where our SATzilla07 solvers won three gold, one silver and one bronze medal. In this article, we go well beyond SATzilla07 by making the portfolio construction scalable and completely automated, and improving it by integrating local search solvers as candidate solvers, by predicting performance score instead of runtime, and by using hierarchical hardness models that take into account different types of SAT instances. We demonstrate the effectiveness of these new techniques in extensive experimental results on data sets including instances from the most recent SAT competition.},
  langid = {english},
  keywords = {Constraint Features},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Zeitschriftenartikel\Xu et al - 2008 - SATzilla - Portfolio-based Algorithm Selection for SAT [xu08jo].pdf}
}

@article{zehnt23jo,
  title = {{{SMART}}},
  author = {{Zehnter Sebastian}},
  date = {2023},
  keywords = {Constraint Programming},
  file = {C:\Users\Daniel\OneDrive - Universität Augsburg\Zotero\Zeitschriftenartikel\Zehnter Sebastian - 2023 - SMART.pdf}
}
